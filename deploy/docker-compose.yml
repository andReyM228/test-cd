version: "3"
services:
  bots:
    container_name: bots
    image: ${HOST_FOR_DOCKER_IMAGE}/black_box/bots/${ENVIRONMENT}:${VERSION}
    restart: always
    networks:
      - backend_net
    ports:
      - "8000:8000"
    depends_on:
      - postgres
    volumes:
      - ${PROJECT_DATA_PATH}/platform_data:/app/app_data
    environment:
      - POSTGRES_IP=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=black_box
      - PLATFORM_URL=${PLATFORM_URL}

  corporate:
    container_name: corporate
    image: ${HOST_FOR_DOCKER_IMAGE}/black_box/corporate/${ENVIRONMENT}:${VERSION}
    restart: always
    networks:
      - backend_net
    ports:
      - "8001:8001"
    depends_on:
      - postgres
    volumes:
      - ${PROJECT_DATA_PATH}/platform_data:/app/app_data
    environment:
      - POSTGRES_IP=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=black_box
      - MONGO_IP=mongo
      - MONGO_PORT=27017
      - MONGO_USER=${MONGO_USER}
      - MONGO_PASSWORD=${MONGO_PASSWORD}
      - MONGO_DB=black_box
      - PLATFORM_URL=${PLATFORM_URL}

  platform_ws:
    container_name: platform_ws
    image: ${HOST_FOR_DOCKER_IMAGE}/black_box/platform_ws/${ENVIRONMENT}:${VERSION}
    restart: always
    ports:
      - "5555:5555"
    depends_on:
      - postgres
    networks:
      - backend_net
    volumes:
      - ./google_services:/app/google_services
    environment:
      - POSTGRES_IP=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=black_box
      - PLATFORM_URL=${PLATFORM_URL}
      - PROJECT_ID=${PROJECT_ID}
      - BUCKET_NAME=${BUCKET_NAME}

  backend:
    container_name: backend
    image: ${HOST_FOR_DOCKER_IMAGE}/black_box/backend/${ENVIRONMENT}:${VERSION}
    restart: always
    ports:
      - "5554:5554"
    depends_on:
      - postgres
      - mongo
    networks:
      - backend_net
    environment:
      - POSTGRES_IP=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=black_box
      - MONGO_IP=mongo
      - MONGO_PORT=27017
      - MONGO_USER=${MONGO_USER}
      - MONGO_PASSWORD=${MONGO_PASSWORD}
      - MONGO_DB=black_box
      - PLATFORM_URL=${PLATFORM_URL}
      - PROJECT_ID=${PROJECT_ID}
      - BUCKET_NAME=${BUCKET_NAME}

  postgres:
    container_name: postgres
    image: postgres:15.3-alpine3.18
    restart: always
    networks:
      - backend_net
    ports:
      - "5234:5432"
    volumes:
      - ${PROJECT_DATA_PATH}/postgres:/var/lib/postgresql/data
      - /var/run/postgres/postgres.sock:/var/run/postgres/postgres.sock
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=black_box
      - TZ=GMT
      - PGTZ=GMT

  mongo:
    container_name: mongo
    image: mongo:latest
    restart: always
    networks:
      - backend_net
    ports:
      - "27107:27017"
    volumes:
      - ${PROJECT_DATA_PATH}/mongo:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}
      - MONGO_INITDB_DATABASE=black_box

  dozzle:
    container_name: dozzle
    image: amir20/dozzle:latest
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - backend_net
    ports:
      - "9999:8080"
    depends_on:
      - bots
    environment:
      - DOZZLE_NO_ANALYTICS=true
      - DOZZLE_USERNAME=${DOZZLE_USERNAME}
      - DOZZLE_PASSWORD=${DOZZLE_PASSWORD}
      - DOZZLE_KEY=true

networks:
  backend_net:
    driver: bridge
